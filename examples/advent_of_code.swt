// 2024 aoc

data Char {
    DecimalDigit,
    " ",
    "\n",
}

data String {
    "nil",
    (Char String),
}

// TODO: the optimizer should not keep "diffs" in memory
fn day1_puzzle1: String -> String {
    input -> day1_parse: input {
        (col_1 col_2) -> sort-list-of-binary-numbers: col_1 {
            sorted_1 -> sort-list-of-binary-numbers: col_2 {
                sorted_2 -> zip-differences: (sorted_1 sorted_2) {
                    diffs -> sum-all: diffs {
                        result -> decimal-from-binary: result;
                    }
                }
            }
        }
    }
}

fn zip-differences: (ListOfBinaryNumbers ListOfBinaryNumbers) -> ListOfBinaryNumbers {
    ("nil" "nil") -> "nil";
    ((a ra) (b rb)) -> binary-subtract: (a b) {
        (sign diff) -> zip-differences: (ra rb) {
            rest -> (diff rest);
        }
    }
}

fn sum-all: ListOfBinaryNumbers -> BinaryNumber {
    "nil" -> "nil";
    (a rest) -> sum-all: rest {
        r -> binary-add: (a r);
    }
}

fn day1_parse: String -> (ListOfBinaryNumbers ListOfBinaryNumbers) {
    "nil" -> ("nil" "nil");
    (a1 (a2 (a3 (a4 (a5 
        (" " (" " (" " 
            (b1 (b2 (b3 (b4 (b5 
                ("\n" rest)))))))))))))) -> binary-from-decimal: (a5 (a4 (a3 (a2 (a1 "nil"))))) {
                    a -> binary-from-decimal: (b5 (b4 (b3 (b2 (b1 "nil"))))) {
                        b -> day1_parse: rest {
                            (rest_a rest_b) -> ((a rest_a) (b rest_b));
                        }
                    }
                }
} 

main day1_puzzle1: <<EOF
41226   69190
89318   10100
59419   23880
63157   20193
81510   22869
83942   63304
EOF;